#!/usr/bin/env python3

import argparse
import os
from sys import argv, exit

# Local imports.
import config

def launch(*args, **kwargs):
    cmd = "./" + kwargs.pop('command')
    os.chdir(os.path.dirname(os.path.realpath(__file__)))
    os.execvp(cmd, (cmd, kwargs.pop('hostname'), kwargs.pop('image')))

def init(*args, **kwargs):
    cmd = "./" + kwargs.pop('command')
    os.chdir(os.path.dirname(os.path.realpath(__file__)))
    os.execvp(cmd, [cmd])

def delete(*args, **kwargs):
    cmd = "./" + kwargs.pop('command')
    os.chdir(os.path.dirname(os.path.realpath(__file__)))
    os.execvp(cmd, [cmd, kwargs.pop('hostname')])

def get_ip(*args, **kwargs):
    cmd = "./" + kwargs.pop('command')
    os.chdir(os.path.dirname(os.path.realpath(__file__)))
    os.execvp(cmd, [cmd, kwargs.pop('hostname')])

def get_mac(*args, **kwargs):
    cmd = "./" + kwargs.pop('command')
    os.chdir(os.path.dirname(os.path.realpath(__file__)))
    os.execvp(cmd, [cmd, kwargs.pop('hostname')])

def ssh(*args, **kwargs):
    cmd = "./" + kwargs.pop('command')
    os.chdir(os.path.dirname(os.path.realpath(__file__)))
    argv = [cmd] + list(args)
    os.execvp(cmd, argv)

parser = argparse.ArgumentParser(prog='aoi')
# parser.add_argument('--foo', action='store_true', help='foo help')
# subparsers = parser.add_subparsers(help='sub-command help')
subparsers = parser.add_subparsers()

parser_launch = subparsers.add_parser('launch', help='Launch a cloud image.')
parser_launch.add_argument('image', type=str, help='Image to launch. (Example: xenial)')
parser_launch.add_argument('hostname', type=str, help='Instance hostname to create.')
parser_launch.set_defaults(func=launch, command="aoi-launch")

parser_init = subparsers.add_parser('init', help='Initialize aoi for the first time.')
parser_init.set_defaults(func=init, command="aoi-init")

parser_delete = subparsers.add_parser('delete', help='Delete a running instance.')
parser_delete.add_argument('hostname', type=str, help='Instance hostname to delete.')
parser_delete.set_defaults(func=delete, command="aoi-delete")

parser_get_ip = subparsers.add_parser('get-ip', help='Get the IP address of a running instance.')
parser_get_ip.add_argument('hostname', type=str, help='Instance hostname whose IP address to get.')
parser_get_ip.set_defaults(func=get_ip, command="aoi-get-ip-via-arp")

parser_get_mac = subparsers.add_parser('get-mac', help='Get the MAC address for an instance.')
parser_get_mac.add_argument('hostname', type=str, help='Instance hostname whose IP address to get.')
parser_get_mac.set_defaults(func=get_mac, command="aoi-get-mac")

parser_config = subparsers.add_parser('config', help="Configure aoi.")
# Call out to the config module to add the subparser parameters.
config.configure_subparser(parser_config)
parser_config.set_defaults(func=config.show_command)

parser_ssh = subparsers.add_parser('ssh', help='Open an SSH session to a running instance.')
parser_ssh.set_defaults(func=ssh, command="aoi-ssh")

# parse some argument lists
if __name__ == '__main__':
    out, unknown = parser.parse_known_args(argv[1:])
    kwargs = vars(out)
    func = kwargs.get('func', None)
    if func is not None:
        del kwargs['func']
        func(*unknown, **vars(out))
    else:
        parser.print_help()
        exit(1)
