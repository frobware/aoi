#!/bin/bash -e

cd "$(dirname $0)" 

function error {
    echo "$@"
    exit 1
}


if [ "$1" == "" ]; then
    echo "Must supply a VM name to create."
    exit 1
else
    NAME=$1
fi

if [ "$2" == "" ]; then
    DISTRO=trusty
else
    DISTRO=$2
fi

HOSTNAME=$NAME
INSTANCE=$NAME

IMAGES_DIR=/var/lib/libvirt/images

IMAGE=$IMAGES_DIR/$HOSTNAME.img
CDROM=${IMAGES_DIR}/${HOSTNAME}-config.iso

sudo cp $DISTRO/*.img $IMAGE
sudo qemu-img resize $IMAGE +25GB

PUBKEYS=$(cat ~/.ssh/authorized_keys | tr '\n' '\0' | xargs -0 printf "  - %s\n")

cat > meta-data <<EOF
instance-id: $INSTANCE
local-hostname: $HOSTNAME
public-keys:
$(printf "$PUBKEYS\n")
EOF
cat > user-data <<EOF
#!/bin/bash
echo "Custom user-data has been run."
EOF
chmod +x user-data
sudo genisoimage -o $CDROM -V cidata -r -J meta-data user-data

virt-install \
    --name $HOSTNAME \
    --virt-type kvm --hvm --noautoconsole \
    --import --disk=$IMAGE --disk=$CDROM,device=cdrom \
    --memory 1024 \
    --network network=default,mac=$(./get-mac $HOSTNAME) \
    --network network=maas,mac=$(./get-mac maas-$HOSTNAME)

echo -n "Waiting for $HOSTNAME to become available..."
while [ "$(./vssh $HOSTNAME echo OK 2> /dev/null)" != "OK" ]; do
    sleep 0.1
done
printf "\n"

echo "$HOSTNAME is now available. To access, use:"
echo "    ./vssh $HOSTNAME [command]"
